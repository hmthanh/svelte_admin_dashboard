<script lang="ts">
  import { Line } from "svelte-chartjs";
  import {
    CategoryScale,
    Chart as ChartJS,
    Colors,
    Legend,
    LinearScale,
    LineElement,
    PointElement,
    TimeSeriesScale,
    Title,
    Tooltip,
  } from "chart.js";
  import "chartjs-adapter-moment";
  import zoomPlugin from "chartjs-plugin-zoom";
  import { onMount } from "svelte";

  ChartJS.register(
    Colors,
    Title,
    Tooltip,
    Legend,
    TimeSeriesScale,
    LineElement,
    LinearScale,
    PointElement,
    CategoryScale,
    zoomPlugin
  );
  export let data;
  export let options;
  let ctx;
  let chartCanvas;
  onMount(async () => {
    console.log("go hreere");
    console.log("data", data);
    console.log("options", options);

    ctx = await chartCanvas.getContext("2d");
    var chart2 = new ChartJS(ctx, {
      type: "line",
      data: data,
      options: options,
      // {
      //   labels: chartLabels,
      //   datasets: [
      //     {
      //       label: "Revenue",
      //       backgroundColor: "rgb(255, 99, 132)",
      //       borderColor: "rgb(255, 99, 132)",
      //       data: chartValues,
      //     },
      //   ],
      // },
    });
  });
  // let chartValues = [20, 10, 5, 2, 20, 30, 45];
  // let chartLabels = [
  //   "January",
  //   "February",
  //   "March",
  //   "April",
  //   "May",
  //   "June",
  //   "July",
  // ];
  // let ctx;
  // let chartCanvas;

  // onMount(async () => {
  //   ctx = chartCanvas.getContext("2d");
  //   var chart = new ChartJS(ctx, {
  //     type: "line",
  //     data: {
  //       labels: chartLabels,
  //       datasets: [
  //         {
  //           label: "Revenue",
  //           backgroundColor: "rgb(255, 99, 132)",
  //           borderColor: "rgb(255, 99, 132)",
  //           data: chartValues,
  //         },
  //       ],
  //     },
  //   });
  // });
</script>

<!-- {#if $queryResult.isLoading}
  <span>Loading...</span>
{:else if $queryResult.error}
  <span>An error has occurred: {$queryResult.dataset.error}</span>
{:else}
  <h1>{$queryResult.dataset.dataset}</h1>
{/if} -->

<div class="p-6 chart-containter">
  <!-- <canvas bind:this={chartCanvas} id="myChart" width={"65vw"} height={"45vh"} /> -->
  <!-- <Line {data} {options} /> -->
  <canvas bind:this={chartCanvas} id="myChart" />
</div>

<style>
  .chart-containter {
    width: 65vw;
    height: 45vh;
  }
</style>
